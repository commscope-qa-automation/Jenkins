@Library('shared-library') _

/*
########################################################################
Variables for Separator
########################################################################
*/
def sectionHeaderStyle = '''
    color: white;
    background: green;
    font-family: Roboto, sans-serif !important;
    padding: 5px;
    text-align: center;
'''

def separatorStyle = '''
    border: 0;
    border-bottom: 1px dashed #ccc;
    background: #999;
'''

def separatorTCStyle = '''
	border-color: blue;
	border-style: solid; 
	border-width: 1px;
'''

def LOGIN_USER = jenkinsUtil.getLoginUser()

pipeline {
    options {skipDefaultCheckout(true)}
    
    agent {label "robot_${LOGIN_USER}"}

    stages {
        stage('Parameters'){
            steps {            
                script {
					/*
					########################################################################
					Define customer testsuite and testcase for Choice Parameter script content
					########################################################################
					*/
                    def choiceTestSuite
                    def choiceTestCase

                    if (env.JOB_NAME.contains('ATT')) {
                        choiceTestSuite = testcaseATT.getTestSuite()
                        choiceTestCase = testcaseATT.getTestCase()
                        env.CUSTOMER = "_ATT"
					} else if (env.JOB_NAME.contains('Telstra')) {
                        choiceTestSuite = testcaseTelstra.getTestSuite()
                        choiceTestCase = testcaseTelstra.getTestCase()
                        env.CUSTOMER = "_Telstra"
					} else if (env.JOB_NAME.contains('Frontier')) {
                        choiceTestSuite = testcaseFrontier.getTestSuite()
                        choiceTestCase = testcaseFrontier.getTestCase()
                        env.CUSTOMER = "_Frontier"
					} else if (env.JOB_NAME.contains('Ziply')) {
                        choiceTestSuite = testcaseZiply.getTestSuite()
                        choiceTestCase = testcaseZiply.getTestCase()
                        env.CUSTOMER = "_Ziply"
                    } else if (env.JOB_NAME.contains('Sasktel')) {
                        choiceTestSuite = testcaseSasktel.getTestSuite()
                        choiceTestCase = testcaseSasktel.getTestCase()
                        env.CUSTOMER = "_Sasktel"
					}					
					/*
					########################################################################
					Define string of different functions for Choice Parameter script content 
					########################################################################
					*/
                    def functionGetRequest = jira.strGetRequest()
                    
                    def choiceProjectVersion = jira.strJiraProjectVersion()
                    
                    def choiceProjectCycle = jira.strJiraProjectCycle()
                    
                    def choiceProjectFolder = jira.strJiraProjectFolder()               
					/*
					########################################################################
					Define properties parameters shown on Jenins GUI
					########################################################################
					*/                    
                    properties([
                        parameters([                            
                            [
                                $class: 'ParameterSeparatorDefinition',
                                name: 'DIR_HEADER',
                                sectionHeader: 'Input OutputDir, TestDataDir, TestDataFileName',
                                separatorStyle: separatorStyle,
                                sectionHeaderStyle: sectionHeaderStyle
                            ],
                            string(
                                defaultValue: 'TestData_Custom', 
                                name: 'TestDataDir',
                                description: 'The directory <WORKSPACE>/<TestDataDir> contains test data files.',
                                trim: true
                            ),							
                            string(
                                defaultValue: 'All_TestData', 
                                name: 'TestDataFileName',
                                description: 'Test data file name (no file extension .py) under <WORKSPACE>/<TestDataDir>',
                                trim: true
                            ), 
                            [
                                $class: 'ParameterSeparatorDefinition',
                                name: 'TESTSUITE_HEADER',
                                sectionHeader: 'TestSuites/TestCases: Select test suite and test cases.\nPlease use TestCaseRunFilter1 or TestCaseRunFilter2 to select test cases to run.',
                                separatorStyle: separatorStyle,
                                sectionHeaderStyle: sectionHeaderStyle
                            ],
                            [
                                $class: 'ChoiceParameter', 
                                choiceType: 'PT_SINGLE_SELECT', 
                                description: '', 
                                filterLength: 1, 
                                filterable: true, 
                                name: 'TestSuiteName', 
                                script: [
                                    $class: 'GroovyScript', 
                                    fallbackScript: [
                                        classpath: [], 
                                        sandbox: true, 
                                        script: 
                                            "return['no test suite']"
                                    ], 
                                    script: [
                                        classpath: [], 
                                        sandbox: true, 
                                        script: "${choiceTestSuite}"
                                    ]
                                ]
                            ],
                            [
                                $class: 'CascadeChoiceParameter', 
                                choiceType: 'PT_MULTI_SELECT', 
                                description: '',
                                name: 'TestCaseRunFilter1', 
                                filterable: true,
                                referencedParameters: 'TestSuiteName', 
                                script: 
                                    [$class: 'GroovyScript', 
                                    fallbackScript: [
                                            classpath: [], 
                                            sandbox: true, 
                                            script: "return['no test cases']"
                                            ], 
                                    script: [
                                            classpath: [], 
                                            sandbox: true, 
                                            script: "${choiceTestCase}"
                                        ] 
                                ]
                            ],
                            [
                                $class: 'ParameterSeparatorDefinition',
                                name: 'TCSeparator',
                                sectionHeader: '',
                                separatorStyle: separatorTCStyle,
                                sectionHeaderStyle: ''
                            ],                            
                            string(
                                defaultValue: '', 
                                name: 'TestCaseRunFilter2',
                                description: 'This is to filter which test cases will be run. The entire test suite will be run if the value is empty.\n-t, --test <name> 	Selects the test cases by name _.\n-i, --include <tag> 	Includes the test cases_ by tag.\n-e, --exclude <tag> 	Excludes the test cases_ by tag.',
                                trim: true
                            ),                            
                            [
                                $class: 'ParameterSeparatorDefinition',
                                name: 'ETRACK_HEADER',
                                sectionHeader: 'Etrack Release / Cycle: Auto update Etrack test case status.\nChoose "Retrieve Etrack Version and select Etrack Version / Cycle / Folder from dropdown list.',
                                separatorStyle: separatorStyle,
                                sectionHeaderStyle: sectionHeaderStyle
                            ],
                            [
                                $class: 'ChoiceParameter', 
                                choiceType: 'PT_CHECKBOX', 
                                description: '', 
                                filterLength: 1, 
                                filterable: false, 
                                name: 'RetrieveProjectVersion', 
                                script: [
                                    $class: 'GroovyScript', 
                                    fallbackScript: [
                                        classpath: [], 
                                        sandbox: false, 
                                        script: 
                                            "return['no text box']"
                                    ], 
                                    script: [
                                        classpath: [], 
                                        sandbox: false, 
                                        script: "return ['Retrieve Project Version']"
                                    ]
                                ]
                            ],
                            [
                                $class: 'CascadeChoiceParameter', 
                                choiceType: 'PT_SINGLE_SELECT', 
                                description: '',
                                name: 'ProjectVersion', 
                                filterable: true,                                 
                                referencedParameters: 'RetrieveProjectVersion', 
                                script: 
                                    [$class: 'GroovyScript', 
                                    fallbackScript: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: "return['no project version']"
                                    ], 
                                    script: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: "${choiceProjectVersion}${functionGetRequest}"
                                    ] 
                                ]
                            ],
                            [
                                $class: 'CascadeChoiceParameter', 
                                choiceType: 'PT_SINGLE_SELECT', 
                                description: '',
                                name: 'ProjectCycle', 
                                referencedParameters: 'ProjectVersion', 
                                script: 
                                    [$class: 'GroovyScript', 
                                    fallbackScript: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: "return['no project cycle']"
                                    ], 
                                    script: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: "${choiceProjectCycle}${functionGetRequest}"
                                    ] 
                                ]
                            ],
                            [
                                $class: 'CascadeChoiceParameter', 
                                choiceType: 'PT_SINGLE_SELECT', 
                                description: '',
                                name: 'ProjectFolder', 
                                referencedParameters: 'ProjectCycle', 
                                script: 
                                    [$class: 'GroovyScript', 
                                    fallbackScript: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: "return['no project folder']"
                                    ], 
                                    script: [
                                            classpath: [], 
                                            sandbox: false, 
                                            script: "${choiceProjectFolder}${functionGetRequest}"
                                    ] 
                                ]
                            ]                            
                        ])
                    ])
                }
            }
        }
        
        stage ("Check out scripts") {      
            steps {
                checkout([
                	$class: 'GitSCM', 
                	branches: [[name: '*/master']], 
                	doGenerateSubmoduleConfigurations: false, 
                	extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: '../']], 
                	submoduleCfg: [], 
                	userRemoteConfigs: [[credentialsId: 'github_creds', url: 'https://github.com/commscope-qa-automation/RobotProject.git']]
                	])
            }
        }
        
        stage ("Run scripts") {
            steps {
            	script {
					/*
					########################################################################
					Build history: #<Build Number> <Login User> - <TestSuiteName>
					########################################################################
					*/ 
	                currentBuild.displayName = "#" + currentBuild.number + " " + LOGIN_USER + " - " + params.TestSuiteName

					/*
					########################################################################
					Defined different environment variables for robot framework
					########################################################################
					*/ 
					env.LOGIN_USER = LOGIN_USER
                    env.RF_OUTPUT_DIR = "TestResult"
                    env.RF_PREFIX = params.TestSuiteName

                    robotframework.executeRF(this)
            	}
            }
        }
	}       
       
        
	post {
		always {        
			script {
			   if (params.TestSuiteName != "") { 
					/*
					########################################################################
					Start Robot Framework publish
					########################################################################
					*/                
					step(
						[
						  $class                    : 'RobotPublisher',
						  outputPath                : '${RF_OUTPUT_DIR}',
						  outputFileName            : "${RF_PREFIX}_output.xml",
						  reportFileName            : "${RF_PREFIX}_report.html",
						  logFileName               : "${RF_PREFIX}_log.html",
						  disableArchiveOutput      : false,
						  passThreshold             : 100,
						  unstableThreshold         : 95,
						  otherFiles                : "Screenshots/*${TestSuiteName}*.png,Output/*${TestSuiteName}*/*"
						]
					  )

					/*
					########################################################################
					Update JIRA test case execution status
					########################################################################
					*/ 	
                    def projectList = [params.ProjectVersion, params.ProjectCycle, params.ProjectFolder, params.TestSuiteName]
                    
                    jira.updateJiraTestCaseStatus(LOGIN_USER, env.WORKSPACE, env.RF_OUTPUT_DIR, projectList)
							
					/*
					########################################################################
					Start Email notification
					########################################################################
					*/                
					emailext body: '''<html>
						  <head>
							<title>Robot Framework Automation Result</title>
						  </head>
						  <body>
							<h1>ECO Robot Framework Automation Result</h1>
							   <p>
									  $PROJECT_NAME - ${TestSuiteName} - Build # $BUILD_NUMBER - $BUILD_STATUS
							   </p>
							   <p>
									  Check console output at $BUILD_URL to view the results.
							  </p>
							   <p>
								   <a href=${ROBOT_REPORTLINK}>Robot Framework Report</a>
							   </p>
							   <p>Failed Test Cases:</p>
							   <p>${ROBOT_FAILEDCASES}</p>
							</h1>
						  </body>
						</html>''', 
					mimeType: 'text/html',  
					recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], 
					replyTo: '$DEFAULT_REPLYTO', 
					subject: '$PROJECT_NAME - ${TestSuiteName} - ${ROBOT_PASSRATIO} -- PASS ${ROBOT_PASSPERCENTAGE}%'
			   }
			   else {
				   println("No test suite")
			   }
			}
		}
	}                   
}   
